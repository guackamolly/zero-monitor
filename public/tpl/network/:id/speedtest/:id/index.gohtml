{{ define "network/:id/speedtest/:id" }}
<!DOCTYPE html>
<html>
    <head>
        <title>Zero Monitor - {{.Hostname}} - Speedtest</title>
        <base href="/">
        <meta charset='utf-8'>
        <meta http-equiv='X-UA-Compatible' content='IE=edge'>
        <meta name='viewport' content='width=device-width, initial-scale=1'>

        <meta name="title"
            content="Zero Monitor - {{.Hostname}} - Speedtest">
        <meta name="description" content>

        <!-- Facebook Meta Tags -->
        <meta property="og:url" content>
        <meta property="og:type" content="website">
        <meta property="og:title"
            content="Zero Monitor - {{.Hostname}} - Speedtest">
        <meta property="og:description" content>
        <meta property="og:image"
            content="https://guackamollyapps.com/insta-archiver/static/icon-192.png">

        <!-- Twitter Meta Tags -->
        <meta name="twitter:card" content="summary_large_image">
        <meta property="twitter:domain" content="guackamollyapps.com">
        <meta property="twitter:url" content>
        <meta name="twitter:title"
            content="Zero Monitor - {{.Hostname}} - Speedtest">
        <meta name="twitter:description" content>
        <meta name="twitter:image"
            content="https://guackamollyapps.com/insta-archiver/static/icon-192.png">

        <link rel="icon" href="static/favicon.ico" sizes="any">
        <link rel="apple-touch-icon" href="static/apple-touch-icon.png">
        <link rel='stylesheet' type='text/css' media='screen' href='index.css'>
        <link rel='stylesheet' type='text/css' media='print' href='index.css'>

        {{ if not .Speedtest.Finished }}
        <script>
            const animatedElements = {
                'speedtest-latency': false,
                'speedtest-upload': false,
                'speedtest-download': false,
            };

            const socket = new WebSocket(`ws://${window.location.host}${window.location.pathname}`);
            socket.onopen = () => {
                console.log('WebSocket connection opened');
            };

            socket.onmessage = (event) => {
                console.log(event.data);

                const view = JSON.parse(event.data);
                document.getElementById(view.ID).innerHTML = view.Value;

                if(view.ID === 'speedtest-status') {
                    for(const k in animatedElements) {
                        document.getElementById(k).classList.remove('speedtest-animate');
                    }
                }

                if(view.ID in animatedElements) {
                    document.getElementById(view.ID).classList.add('speedtest-animate');
                }
            };

            socket.onclose = () => {
                console.log('WebSocket connection closed');  
            };
        </script>
        {{ end }}
    </head>

    <body>
        <header>
            <div class="logo">
                <a class="logo-top" href="/">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32"
                        height="32" fill="#000000" viewBox="0 0 256 256"><path
                            d="M240,128a8,8,0,0,1-8,8H204.94l-37.78,75.58A8,8,0,0,1,160,216h-.4a8,8,0,0,1-7.08-5.14L95.35,60.76,63.28,131.31A8,8,0,0,1,56,136H24a8,8,0,0,1,0-16H50.85L88.72,36.69a8,8,0,0,1,14.76.46l57.51,151,31.85-63.71A8,8,0,0,1,200,120h32A8,8,0,0,1,240,128Z"></path></svg>
                    <span>Zero Monitor</span>
                </a>

                <a class="logo-text" href="https://guackamollyapps.com"
                    target="_blank">by
                    Guackamolly Apps</a>
            </div>

            <nav>
                <a href="dashboard">Dashboard</a>
                <a href="network">Network</a>
                <a href="settings">Settings</a>
            </nav>
        </header>
        <main>
            <section class="main-content-1">
                <h1>Speedtest</h1>
                <p>
                    This speedtest was initialized on node <b>{{.Hostname}}</b>
                    at {{.Speedtest.TakenAt}}.
                </p>
                <div class="divider"></div>
                {{ if .Err }}
                {{template "error" .Err }}
                {{ end }}
                <section>
                    {{ template "speedtest" .Speedtest }}
                </section>
            </section>
        </main>
        <footer>
            <nav>
                <a href="network/{{.ID}}/speedtest/history">History</a>
            </nav>
        </footer>
    </body>
</html>
{{end}}